apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: create-room
    name: create-room
  spec:
    ports:
    - name: "5100"
      port: 5100
      targetPort: 5100
    selector:
      io.kompose.service: create-room
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: join-room
    name: join-room
  spec:
    ports:
    - name: "5101"
      port: 5101
      targetPort: 5101
    selector:
      io.kompose.service: join-room
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kong
    name: kong
  spec:
    ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
    - name: "8001"
      port: 8001
      targetPort: 8001
    selector:
      io.kompose.service: kong
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kong-database
    name: kong-database
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: kong-database
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: konga
    name: konga
  spec:
    ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
    selector:
      io.kompose.service: konga
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: leave-room
    name: leave-room
  spec:
    ports:
    - name: "5102"
      port: 5102
      targetPort: 5102
    selector:
      io.kompose.service: leave-room
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: message-lister
    name: message-lister
  spec:
    ports:
    - name: "5003"
      port: 5003
      targetPort: 5003
    selector:
      io.kompose.service: message-lister
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    ports:
    - name: "5672"
      port: 5672
      targetPort: 5672
    - name: "15672"
      port: 15672
      targetPort: 15672
    selector:
      io.kompose.service: rabbitmq
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: send-message
    name: send-message
  spec:
    ports:
    - name: "5103"
      port: 5103
      targetPort: 5103
    selector:
      io.kompose.service: send-message
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: activity-log
    name: activity-log
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: activity-log
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: activity-log
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://is213@host.docker.internal:3306/activity_log
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/activity_log:1.0
          imagePullPolicy: ""
          name: activity-log
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: create-room
    name: create-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: create-room
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: create-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: game_URL
            value: http://game:5002/game
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://room:5001/room
          - name: user_URL
            value: http://user:5000/user
          image: aarontanyien/create_room:1.0
          imagePullPolicy: ""
          name: create-room
          ports:
          - containerPort: 5100
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: error
    name: error
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: error
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: error
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://is213@host.docker.internal:3306/error
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/error:1.0
          imagePullPolicy: ""
          name: error
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: game
    name: game
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: game
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: game
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          image: aarontanyien/game:1.0
          imagePullPolicy: ""
          name: game
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: join-room
    name: join-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: join-room
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: join-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: game_URL
            value: http://game:5002/game
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://room:5001/room
          - name: user_URL
            value: http://user:5000/user
          image: aarontanyien/join_room:1.0
          imagePullPolicy: ""
          name: join-room
          ports:
          - containerPort: 5101
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kong
    name: kong
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kong
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: kong
      spec:
        containers:
        - env:
          - name: KONG_ADMIN_LISTEN
            value: 0.0.0.0:8001
          - name: KONG_DATABASE
            value: postgres
          - name: KONG_PG_HOST
            value: kong-database
          - name: KONG_PG_PASSWORD
            value: password
          - name: KONG_PG_USER
            value: kong
          - name: KONG_PROXY_LISTEN
            value: 0.0.0.0:8000
          image: kong:2.0.4
          imagePullPolicy: ""
          name: kong
          ports:
          - containerPort: 8000
          - containerPort: 8001
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: kong-database
    name: kong-database
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: kong-database
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: kong-database
      spec:
        containers:
        - env:
          - name: POSTGRES_DB
            value: kong
          - name: POSTGRES_PASSWORD
            value: password
          - name: POSTGRES_USER
            value: kong
          image: postgres:9.6
          imagePullPolicy: ""
          livenessProbe:
            exec:
              command:
              - pg_isready
              - -U
              - kong
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: kong-database
          ports:
          - containerPort: 5432
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pgdata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pgdata
    name: pgdata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.network/playfoo: "true"
      io.kompose.service: kong-migration
    name: kong-migration
  spec:
    containers:
    - args:
      - kong
      - migrations
      - bootstrap
      env:
      - name: KONG_DATABASE
        value: postgres
      - name: KONG_PG_HOST
        value: kong-database
      - name: KONG_PG_PASSWORD
        value: password
      - name: KONG_PG_USER
        value: kong
      image: kong:2.0.4
      name: kong-migration
      resources: {}
    restartPolicy: OnFailure
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: konga
    name: konga
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: konga
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: konga
      spec:
        containers:
        - env:
          - name: DB_ADAPTER
            value: postgres
          - name: DB_DATABASE
            value: konga_db
          - name: DB_HOST
            value: kong-database
          - name: DB_PASSWORD
            value: password
          - name: DB_USER
            value: kong
          image: pantsel/konga
          imagePullPolicy: ""
          name: konga
          ports:
          - containerPort: 1337
          resources: {}
          volumeMounts:
          - mountPath: /app/kongadata
            name: kongadata
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: kongadata
          persistentVolumeClaim:
            claimName: kongadata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: kongadata
    name: kongadata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: leave-room
    name: leave-room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: leave-room
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: leave-room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://room:5001/room
          - name: user_URL
            value: http://user:5000/user
          image: aarontanyien/leave_room:1.0
          imagePullPolicy: ""
          name: leave-room
          ports:
          - containerPort: 5102
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: message
    name: message
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: message
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: message
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://is213@host.docker.internal:3306/message
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/message:1.0
          imagePullPolicy: ""
          name: message
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: message-lister
    name: message-lister
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: message-lister
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: message-lister
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://is213@host.docker.internal:3306/message
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          image: aarontanyien/message_listener:1.0
          imagePullPolicy: ""
          name: message-lister
          ports:
          - containerPort: 5003
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: rabbitmq
    name: rabbitmq
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: rabbitmq
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3-management
          imagePullPolicy: ""
          name: rabbitmq
          ports:
          - containerPort: 5672
          - containerPort: 15672
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/rabbitmq
            name: rabbitmq-data
        hostname: playfoo-rabbit
        restartPolicy: Always
        serviceAccountName: ""
        volumes:
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-data
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: rabbitmq-data
    name: rabbitmq-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: room
    name: room
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: room
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: room
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: dbURL
            value: mysql+mysqlconnector://is213@host.docker.internal:3306/room
          image: aarontanyien/room:1.0
          imagePullPolicy: ""
          name: room
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
        -o kubemanifests.yaml
      kompose.version: 1.21.0 (992df58d8)
    creationTimestamp: null
    labels:
      io.kompose.service: send-message
    name: send-message
  spec:
    replicas: 1
    selector:
      matchLabels:
        io.kompose.service: send-message
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: D:\Programming Tools\Kompose\kompose.exe convert -f docker-compose.yml
            -o kubemanifests.yaml
          kompose.version: 1.21.0 (992df58d8)
        creationTimestamp: null
        labels:
          io.kompose.network/playfoo: "true"
          io.kompose.service: send-message
      spec:
        containers:
        - env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: rabbit_host
            value: rabbitmq
          - name: rabbit_port
            value: "5672"
          - name: room_URL
            value: http://room:5001/room
          - name: user_URL
            value: http://user:5000/user
          image: aarontanyien/send_message:1.0
          imagePullPolicy: ""
          name: send-message
          ports:
          - containerPort: 5103
          resources: {}
        restartPolicy: Always
        serviceAccountName: ""
        volumes: null
  status: {}
- apiVersion: extensions/v1beta1
  kind: NetworkPolicy
  metadata:
    creationTimestamp: null
    name: playfoo
  spec:
    ingress:
    - from:
      - podSelector:
          matchLabels:
            io.kompose.network/playfoo: "true"
    podSelector:
      matchLabels:
        io.kompose.network/playfoo: "true"
kind: List
metadata: {}

